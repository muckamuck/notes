{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Mappings": {
        "AWSRegionToAMI": {
            "ap-northeast-1": {
                "AMIID": "ami-9cd57ffd"
            },
            "ap-southeast-1": {
                "AMIID": "ami-a900a3ca"
            },
            "ap-southeast-2": {
                "AMIID": "ami-5781be34"
            },
            "eu-central-1": {
                "AMIID": "ami-54f5303b"
            },
            "eu-west-1": {
                "AMIID": "ami-a1491ad2"
            },
            "us-east-1": {
                "AMIID": "ami-eca289fb"
            },
            "us-east-2": {
                "AMIID": "ami-446f3521"
            },
            "us-west-1": {
                "AMIID": "ami-9fadf8ff"
            },
            "us-west-2": {
                "AMIID": "ami-7abc111a"
            }
        }
    },
    "Outputs": {
        "ECSALB": {
            "Description": "Your ALB DNS URL",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        {
                            "Fn::GetAtt": [
                                "ECSALB",
                                "DNSName"
                            ]
                        }
                    ]
                ]
            }
        },
        "ecscluster": {
            "Value": {
                "Ref": "ECSCluster"
            }
        },
        "ecsservice": {
            "Value": {
                "Ref": "service"
            }
        },
        "taskdef": {
            "Value": {
                "Ref": "taskdefinition"
            }
        }
    },
    "Parameters": {
        "DesiredCapacity": {
            "Default": "1",
            "Description": "Number of instances to launch in your ECS cluster.",
            "Type": "Number"
        },
        "InstanceType": {
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ],
            "ConstraintDescription": "Please choose a valid instance type.",
            "Default": "t2.micro",
            "Description": "EC2 instance type",
            "Type": "String"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the ECS instances.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "MaxSize": {
            "Default": "1",
            "Description": "Maximum number of instances that can be launched in your ECS cluster.",
            "Type": "Number"
        },
        "SubnetId": {
            "Description": "Select at two subnets in your selected VPC.",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "VpcId": {
            "Description": "Select a VPC that allows instances to access the Internet.",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Resources": {
        "ALB500sAlarmScaleUp": {
            "Properties": {
                "AlarmActions": [
                    {
                        "Ref": "ServiceScalingPolicy"
                    }
                ],
                "AlarmDescription": "Alarm if our ALB generates too many HTTP 500s.",
                "ComparisonOperator": "GreaterThanThreshold",
                "Dimensions": [
                    {
                        "Name": "LoadBalancer",
                        "Value": {
                            "Fn::GetAtt": [
                                "ECSALB",
                                "LoadBalancerFullName"
                            ]
                        }
                    }
                ],
                "EvaluationPeriods": "1",
                "MetricName": "HTTPCode_ELB_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
                "Period": "60",
                "Statistic": "Average",
                "Threshold": "10"
            },
            "Type": "AWS::CloudWatch::Alarm"
        },
        "ALBListener": {
            "DependsOn": "ECSServiceRole",
            "Properties": {
                "DefaultActions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "ECSTG"
                        },
                        "Type": "forward"
                    }
                ],
                "LoadBalancerArn": {
                    "Ref": "ECSALB"
                },
                "Port": "80",
                "Protocol": "HTTP"
            },
            "Type": "AWS::ElasticLoadBalancingV2::Listener"
        },
        "AutoscalingRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "application-autoscaling.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "application-autoscaling:*",
                                        "cloudwatch:DescribeAlarms",
                                        "cloudwatch:PutMetricAlarm",
                                        "ecs:DescribeServices",
                                        "ecs:UpdateService"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ]
                        },
                        "PolicyName": "service-autoscaling"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "CloudwatchLogsGroup": {
            "Properties": {
                "LogGroupName": {
                    "Fn::Join": [
                        "-",
                        [
                            "ECSLogGroup",
                            {
                                "Ref": "AWS::StackName"
                            }
                        ]
                    ]
                },
                "RetentionInDays": 14
            },
            "Type": "AWS::Logs::LogGroup"
        },
        "ContainerInstances": {
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "EC2InstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionToAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMIID"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "EcsSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "echo ECS_CLUSTER=",
                                {
                                    "Ref": "ECSCluster"
                                },
                                " >> /etc/ecs/ecs.config\n",
                                "yum install -y aws-cfn-bootstrap\n",
                                "/opt/aws/bin/cfn-signal -e $? ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource ECSAutoScalingGroup ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "EC2InstanceProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "EC2Role"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "EC2Role": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ecs:CreateCluster",
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:DiscoverPollEndpoint",
                                        "ecs:Poll",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:StartTelemetrySession",
                                        "ecs:Submit*",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ]
                        },
                        "PolicyName": "ecs-service"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "ECSALB": {
            "Properties": {
                "LoadBalancerAttributes": [
                    {
                        "Key": "idle_timeout.timeout_seconds",
                        "Value": "30"
                    }
                ],
                "Name": "ECSALB",
                "Scheme": "internet-facing",
                "SecurityGroups": [
                    {
                        "Ref": "EcsSecurityGroup"
                    }
                ],
                "Subnets": {
                    "Ref": "SubnetId"
                }
            },
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer"
        },
        "ECSALBListenerRule": {
            "DependsOn": "ALBListener",
            "Properties": {
                "Actions": [
                    {
                        "TargetGroupArn": {
                            "Ref": "ECSTG"
                        },
                        "Type": "forward"
                    }
                ],
                "Conditions": [
                    {
                        "Field": "path-pattern",
                        "Values": [
                            "/"
                        ]
                    }
                ],
                "ListenerArn": {
                    "Ref": "ALBListener"
                },
                "Priority": 1
            },
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule"
        },
        "ECSAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT15M"
                }
            },
            "Properties": {
                "DesiredCapacity": {
                    "Ref": "DesiredCapacity"
                },
                "LaunchConfigurationName": {
                    "Ref": "ContainerInstances"
                },
                "MaxSize": {
                    "Ref": "MaxSize"
                },
                "MinSize": "1",
                "VPCZoneIdentifier": {
                    "Ref": "SubnetId"
                }
            },
            "UpdatePolicy": {
                "AutoScalingReplacingUpdate": {
                    "WillReplace": "true"
                }
            }
        },
        "ECSCluster": {
            "Type": "AWS::ECS::Cluster"
        },
        "ECSServiceRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ecs.amazonaws.com"
                                ]
                            }
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                        "elasticloadbalancing:DeregisterTargets",
                                        "elasticloadbalancing:Describe*",
                                        "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                        "elasticloadbalancing:RegisterTargets",
                                        "ec2:Describe*",
                                        "ec2:AuthorizeSecurityGroupIngress"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ]
                        },
                        "PolicyName": "ecs-service"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "ECSTG": {
            "DependsOn": "ECSALB",
            "Properties": {
                "HealthCheckIntervalSeconds": 10,
                "HealthCheckPath": "/",
                "HealthCheckProtocol": "HTTP",
                "HealthCheckTimeoutSeconds": 5,
                "HealthyThresholdCount": 2,
                "Name": "ECSTG",
                "Port": 80,
                "Protocol": "HTTP",
                "UnhealthyThresholdCount": 2,
                "VpcId": {
                    "Ref": "VpcId"
                }
            },
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup"
        },
        "EcsSecurityGroup": {
            "Properties": {
                "GroupDescription": "ECS Security Group",
                "VpcId": {
                    "Ref": "VpcId"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "EcsSecurityGroupALBports": {
            "Properties": {
                "FromPort": "31000",
                "GroupId": {
                    "Ref": "EcsSecurityGroup"
                },
                "IpProtocol": "tcp",
                "SourceSecurityGroupId": {
                    "Ref": "EcsSecurityGroup"
                },
                "ToPort": "61000"
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "EcsSecurityGroupHTTPinbound": {
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "FromPort": "80",
                "GroupId": {
                    "Ref": "EcsSecurityGroup"
                },
                "IpProtocol": "tcp",
                "ToPort": "80"
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "EcsSecurityGroupSSHinbound": {
            "Properties": {
                "CidrIp": "0.0.0.0/0",
                "FromPort": "22",
                "GroupId": {
                    "Ref": "EcsSecurityGroup"
                },
                "IpProtocol": "tcp",
                "ToPort": "22"
            },
            "Type": "AWS::EC2::SecurityGroupIngress"
        },
        "ServiceScalingPolicy": {
            "Properties": {
                "PolicyName": "AStepPolicy",
                "PolicyType": "StepScaling",
                "ScalingTargetId": {
                    "Ref": "ServiceScalingTarget"
                },
                "StepScalingPolicyConfiguration": {
                    "AdjustmentType": "PercentChangeInCapacity",
                    "Cooldown": 60,
                    "MetricAggregationType": "Average",
                    "StepAdjustments": [
                        {
                            "MetricIntervalLowerBound": 0,
                            "ScalingAdjustment": 200
                        }
                    ]
                }
            },
            "Type": "AWS::ApplicationAutoScaling::ScalingPolicy"
        },
        "ServiceScalingTarget": {
            "DependsOn": "service",
            "Properties": {
                "MaxCapacity": 2,
                "MinCapacity": 1,
                "ResourceId": {
                    "Fn::Join": [
                        "",
                        [
                            "service/",
                            {
                                "Ref": "ECSCluster"
                            },
                            "/",
                            {
                                "Fn::GetAtt": [
                                    "service",
                                    "Name"
                                ]
                            }
                        ]
                    ]
                },
                "RoleARN": {
                    "Fn::GetAtt": [
                        "AutoscalingRole",
                        "Arn"
                    ]
                },
                "ScalableDimension": "ecs:service:DesiredCount",
                "ServiceNamespace": "ecs"
            },
            "Type": "AWS::ApplicationAutoScaling::ScalableTarget"
        },
        "service": {
            "DependsOn": "ALBListener",
            "Properties": {
                "Cluster": {
                    "Ref": "ECSCluster"
                },
                "DesiredCount": "1",
                "LoadBalancers": [
                    {
                        "ContainerName": "simple-app",
                        "ContainerPort": "80",
                        "TargetGroupArn": {
                            "Ref": "ECSTG"
                        }
                    }
                ],
                "Role": {
                    "Ref": "ECSServiceRole"
                },
                "TaskDefinition": {
                    "Ref": "taskdefinition"
                }
            },
            "Type": "AWS::ECS::Service"
        },
        "taskdefinition": {
            "Properties": {
                "ContainerDefinitions": [
                    {
                        "Cpu": "10",
                        "Essential": "true",
                        "Image": "httpd:2.4",
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-group": {
                                    "Ref": "CloudwatchLogsGroup"
                                },
                                "awslogs-region": {
                                    "Ref": "AWS::Region"
                                },
                                "awslogs-stream-prefix": "ecs-demo-app"
                            }
                        },
                        "Memory": "300",
                        "MountPoints": [
                            {
                                "ContainerPath": "/usr/local/apache2/htdocs",
                                "SourceVolume": "my-vol"
                            }
                        ],
                        "Name": "simple-app",
                        "PortMappings": [
                            {
                                "ContainerPort": 80
                            }
                        ]
                    },
                    {
                        "Command": [
                            "/bin/sh -c \"while true; do echo '<html> <head> <title>Amazon ECS Sample App</title> <style>body {margin-top: 40px; background-color: #333;} </style> </head><body> <div style=color:white;text-align:center> <h1>Amazon ECS Sample App</h1> <h2>Congratulations!</h2> <p>Your application is now running on a container in Amazon ECS.</p>' > top; /bin/date > date ; echo '</div></body></html>' > bottom; cat top date bottom > /usr/local/apache2/htdocs/index.html ; sleep 1; done\""
                        ],
                        "Cpu": 10,
                        "EntryPoint": [
                            "sh",
                            "-c"
                        ],
                        "Essential": false,
                        "Image": "busybox",
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-group": {
                                    "Ref": "CloudwatchLogsGroup"
                                },
                                "awslogs-region": {
                                    "Ref": "AWS::Region"
                                },
                                "awslogs-stream-prefix": "ecs-demo-app"
                            }
                        },
                        "Memory": 200,
                        "Name": "busybox",
                        "VolumesFrom": [
                            {
                                "SourceContainer": "simple-app"
                            }
                        ]
                    }
                ],
                "Family": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-ecs-demo-app"
                        ]
                    ]
                },
                "Volumes": [
                    {
                        "Name": "my-vol"
                    }
                ]
            },
            "Type": "AWS::ECS::TaskDefinition"
        }
    }
}
